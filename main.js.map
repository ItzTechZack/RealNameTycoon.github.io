{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/updates-dialog/updates-dialog.component.css","webpack:///./src/app/updates-dialog/updates-dialog.component.html","webpack:///./src/app/updates-dialog/updates-dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,0KAA0K,wBAAwB,2BAA2B,+BAA+B,6CAA6C,y8FAAy8F,mBAAmB,o0CAAo0C,kBAAkB,sOAAsO,WAAW,oMAAoM,cAAc,mMAAmM,+DAA+D,8cAA8c,irF;;;;;;;;;;;;;;;;;;;;;;;;;;ACApsL;AACe;AACwB;AAsBjF;IAyCI,sBAAmB,MAAiB,EAAQ,QAAqB;QAA9C,WAAM,GAAN,MAAM,CAAW;QAAQ,aAAQ,GAAR,QAAQ,CAAa;QAtCjE,kBAAa,GAAwB;YAEjC;gBACI,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACN,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAC;oBAClC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAC;oBACjC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC;oBAC9B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,YAAY,EAAC;oBACrC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC;oBAC/B,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAC;iBACnC;aACJ;YACD;gBACI,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE;oBACN,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,kBAAkB,EAAC;oBAC5C,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,iBAAiB,EAAC;oBAC3C,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,mBAAmB,EAAC;iBAChD;aACJ;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACN,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAC;oBAC1C,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAC;iBAC7C;aACJ;YACD;gBACI,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE;oBACN,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,wBAAwB,EAAC;oBACjD,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,iBAAiB,EAAC;oBAC1C,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,EAAC;iBAC3C;aACJ;SACJ,CAAC;QAcF,2BAAsB,GAAG,GAAG,CAAC;QAC7B,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,CAAC,CAAC;QAEjB,iBAAY,GAAG,IAAI,CAAC;QACpB,oBAAe,GAAG,IAAI,CAAC;QACvB,gBAAW,GAAG,IAAI,CAAC;QACnB,mBAAc,GAAG,IAAI,CAAC;QACtB,cAAS,GAAG,IAAI,CAAC;QAEjB,cAAS,GAAG,IAAI,CAAC;QACjB,mBAAc,GAAG,IAAI,CAAC;QACtB,iBAAY,GAAG,IAAI,CAAC;IAxBgD,CAAC;IAErE,uCAAgB,GAAhB;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACvD,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAkBD,+CAAwB,GAAxB,UAAyB,KAAK;QAC1B,IAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;YACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;aAAI;YACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;YAC/C,IAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,EAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aAC5C;SAEJ;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACxH,CAAC;IAED,6CAAsB,GAAtB,UAAuB,KAAK;QACxB,IAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/B;aAAI;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;SACrD;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACxH,CAAC;IAED,yCAAkB,GAAlB,UAAmB,KAAK;QACpB,IAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;YACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;aAAI;YACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;YAC9C,IAAG,IAAI,CAAC,WAAW,IAAI,CAAC,EAAC;gBACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACzB;iBAAK,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,EAAC;gBAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;aAC3C;SACJ;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAGxH,CAAC;IAED,4CAAqB,GAArB,UAAsB,KAAK;QACvB,IAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;YACjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC9B;aAAI;YACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;SACpD;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACxH,CAAC;IAED,uCAAgB,GAAhB,UAAiB,KAAK;QAElB,IAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;YACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;aAAK;YACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;SAC/C;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAExH,CAAC;IAED,4BAAK,GAAL,UAAM,EAAU;QACZ,OAAO,IAAI,OAAO,CAAE,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAE,CAAC;IAC7D,CAAC;IAED,sCAAe,GAAf,UAAgB,KAAK;QACjB,IAAG,KAAK,CAAC,OAAO,EAAC;YACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;SAC3B;aAAI;YACD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAExH,CAAC;IAED,sCAAe,GAAf,UAAgB,KAAK;QACjB,IAAG,KAAK,CAAC,OAAO,EAAC;YACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;aAAI;YACD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACxH,CAAC;IAED,qCAAc,GAAd,UAAe,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM;QAEhD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAG,MAAM,GAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,CAAC,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,GAAG,EAAE,IAAI,EAAE,IAAI,IAAI;eACtF,EAAE,GAAG,CAAC,IAAI,UAAU,IAAI,IAAI,IAAI,UAAU,GAAG,CAAC,CAAC,EAAC;YAC/C,IAAI,CAAC,SAAS,GAAG,2CAA2C,CAAC;YAC7D,IAAI,CAAC,cAAc,GAAG,2CAA2C,CAAC;YAClE,IAAI,CAAC,YAAY,GAAG,2CAA2C,CAAC;SACnE;aAAK,IAAG,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,EAAC;YACnE,IAAI,CAAC,SAAS,GAAG,2CAA2C,CAAC;YAC7D,IAAI,CAAC,cAAc,GAAG,2CAA2C,CAAC;YAClE,IAAI,CAAC,YAAY,GAAG,2CAA2C,CAAC;SACnE;aAAI;YACD,IAAI,QAAQ,GAAG,CAAC,CAAC;YAEjB,IAAG,OAAO,GAAG,CAAC,EAAC;gBACX,KAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,IAAE,EAAE,EAAE,CAAC,EAAE,EAAC;oBACzB,QAAQ,IAAI,CAAC,GAAC,CAAC;iBAClB;aACJ;iBAAI;gBACD,KAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,IAAE,EAAE,EAAE,CAAC,EAAE,EAAC;oBACzB,QAAQ,IAAI,CAAC,GAAC,CAAC,CAAC;iBACnB;gBACD,QAAQ,IAAE,EAAE,CAAC;aAChB;YAED,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,YAAY,GAAG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAEvF,IAAG,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,IAAI,EAAC;gBAC5B,IAAI,oBAAoB,GAAG,CAAC,CAAC;gBAC7B,IAAI,kBAAkB,GAAG,CAAC,CAAC;gBAC3B,OAAM,QAAQ,GAAE,CAAC,EAAC;oBAEd,oBAAoB,IAAI,UAAU,CAAC;oBACnC,kBAAkB,EAAE,CAAC;oBACrB,QAAQ,GAAG,QAAQ,GAAG,CAAC,UAAU,GAAC,YAAY,GAAG,MAAM,CAAC,CAAC;iBAC5D;gBACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACrD;iBAAK,IAAG,UAAU,GAAG,CAAC,IAAI,UAAU,IAAI,IAAI,EAAC;gBAE1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,YAAY,CAAC,CAAC;gBACvD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAC,YAAY,CAAC,GAAC,UAAU,CAAC,CAAC;aAErE;iBAAI;gBACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,YAAY,CAAC,CAAC;gBACvD,IAAI,CAAC,YAAY,GAAG,gCAAgC,CAAC;aACxD;YAID,IAAG,IAAI,GAAE,CAAC,IAAI,EAAE,GAAE,CAAC,EAAC;gBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;SACJ;IAIL,CAAC;IAED,oDAA6B,GAA7B;QACI,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QACvB,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;QAC3B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QACnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,MAAM,EAAE,CAAC;QAChB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,oCAAa,GAAb,UAAc,KAAK;QACf,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACxH,CAAC;IAID,mCAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YAChC,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;IACP,CAAC;IAhPQ,YAAY;QAPxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCA4C6B,2DAAS,EAAkB,6DAAW;OAzCxD,YAAY,CAkPxB;IAAD,mBAAC;CAAA;AAlPwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxB+B;AACqB;AAChB;AACJ;AACE;AACN;AACI;AACE;AACN;AACE;AACQ;AACV;AACA;AACM;AACN;AACW;AACV;AACG;AACK;AAEZ;AAEH;AACoC;AAoCnF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlCrB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,gGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,4EAAiB;gBACjB,wEAAe;gBACf,0EAAgB;gBAChB,oEAAa;gBACb,wEAAe;gBACf,0EAAgB;gBAChB,oEAAa;gBACb,sEAAc;gBACd,+EAAkB;gBAClB,qEAAa;gBACb,qEAAa;gBACb,2EAAgB;gBAChB,qEAAkB;gBAClB,2DAAW;gBACX,mEAAmB;gBACnB,sEAAgB;gBAChB,yEAAe;gBACf,8EAAiB;aAElB;YACD,eAAe,EAAE;gBACb,gGAAsB;aACzB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3DtB,mB;;;;;;;;;;;ACAA,6hC;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;;ACPnC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEvC;AAElB,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<script async src=\\\"https://www.googletagmanager.com/gtag/js?id=UA-125357957-1\\\"></script>\\r\\n<script>\\r\\n    window.dataLayer = window.dataLayer || [];\\r\\n    function gtag(){dataLayer.push(arguments);}\\r\\n    gtag('js', new Date());\\r\\n\\r\\n    gtag('config', 'UA-125357957-1');\\r\\n</script>\\r\\n<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\r\\n<mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxShow.xs=\\\"false\\\" fxShow.sm=\\\"false\\\" fxShow.md=\\\"true\\\" fxShow.lg=\\\"true\\\" fxShow.xl=\\\"true\\\">\\r\\n    <span fxFlex=\\\"50\\\" class=\\\"toolBarTitle\\\">Real Name Tycoon</span>\\r\\n    <div fxLayoutAlign=\\\"end stretch\\\"  fxFlex=\\\"50\\\" ><button mat-button (click)=\\\"openUpdateDialog()\\\"><b class=\\\"toolBarText\\\">Updated 09/08/2018</b></button></div>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\"  fxShow.xs=\\\"true\\\" fxShow.sm=\\\"true\\\" fxShow.md=\\\"false\\\" fxShow.lg=\\\"false\\\" fxShow.xl=\\\"false\\\">\\r\\n    <span fxFlex=\\\"50\\\"  class=\\\"toolBarTitle\\\">Real Name Tycoon</span>\\r\\n    <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"end stretch\\\"><button  mat-button (click)=\\\"openUpdateDialog()\\\"><b class=\\\"toolBarText\\\">Updates</b></button></div>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <form class=\\\"calculatorForm\\\">\\r\\n                <mat-form-field>\\r\\n                    <input (input)=\\\"currentLevelValueOnInput($event)\\\" id=\\\"currentLevel\\\" [(value)]=\\\"currentLevel\\\" autocomplete=\\\"off\\\" required matInput type=\\\"number\\\" placeholder=\\\"Current Level\\\" min=\\\"1\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input (input)=\\\"currentLevelExpOnInput($event)\\\" id=\\\"currentLevelExp\\\" [(value)]=\\\"currentLevelExp\\\" autocomplete=\\\"off\\\"  matInput type=\\\"number\\\" placeholder=\\\"Current Level Exp\\\" min=\\\"10\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input (input)=\\\"targetLevelOnInput($event)\\\" id=\\\"targetLevel\\\" [(value)]=\\\"targetLevel\\\" autocomplete=\\\"off\\\" required matInput type=\\\"number\\\" placeholder=\\\"Target Level\\\" min=\\\"2\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input (input)=\\\"vouchersPerRunOnInput($event)\\\" id=\\\"vouchersPerRun\\\" [(value)]=\\\"vouchersPerRun\\\" autocomplete=\\\"off\\\"  matInput type=\\\"number\\\" placeholder=\\\"Vouchers Per Run\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input (input)=\\\"expPerRunOnInput($event)\\\" id=\\\"expPerRun\\\" [(value)]=\\\"expPerRun\\\" autocomplete=\\\"off\\\"  matInput type=\\\"number\\\" placeholder=\\\"Exp Per Run\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <mat-select required (valueChange)=\\\"runCalculator($event)\\\" placeholder=\\\"Voucher Type\\\" [(value)]=\\\"defaultVoucherSelected\\\">\\r\\n                        <mat-optgroup *ngFor=\\\"let group of voucherGroups\\\" [label]=\\\"group.name\\\"\\r\\n                                      [disabled]=\\\"group.disabled\\\">\\r\\n                            <mat-option *ngFor=\\\"let voucher of group.vouchers\\\" [value]=\\\"voucher.value\\\">\\r\\n                                {{voucher.viewValue}}\\r\\n                            </mat-option>\\r\\n                        </mat-optgroup>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <div class=\\\"premiumDiscordCheckboxes\\\">\\r\\n                    <mat-checkbox [(value)]=\\\"premiumValue\\\" (change)=\\\"onPremiumChange($event)\\\" fxFlex=\\\"50\\\">Premium</mat-checkbox>\\r\\n                    <mat-checkbox [(value)]=\\\"discordValue\\\" (change)=\\\"onDiscordChange($event)\\\" fxFlex=\\\"50\\\">Discord Link</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n        <mat-accordion>\\r\\n\\r\\n            <mat-expansion-panel [expanded]=\\\"true\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Result\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <form class=\\\"calculatorForm\\\">\\r\\n                    <mat-form-field>\\r\\n                        <div matTooltip=\\\"Copy to clipboard\\\" matTooltipPosition=\\\"left\\\" (click)=\\\"copyToClipboardVouchersNeeded()\\\">\\r\\n                            <input matTooltip=\\\"Click to copy to clipboard\\\" class=\\\"copyToClipboardMouseOnHove\\\" disabled matInput type=\\\"text\\\" placeholder=\\\"Vouchers Needed\\\" value=\\\"{{(vouchersNeeded)}}\\\">\\r\\n                        </div>\\r\\n\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input disabled matInput type=\\\"text\\\" placeholder=\\\"Exp Needed\\\" value=\\\"{{expNeeded}}\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input disabled matInput type=\\\"text\\\" placeholder=\\\"Number of Runs\\\" value=\\\"{{numberOfRuns}}\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input disabled matInput type=\\\"text\\\" placeholder=\\\"Voucher Worth\\\" value=\\\"{{defaultVoucherSelected * premiumValue * discordValue | number}}\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n\\r\\n                </form>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        How to use\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n\\r\\n                <div>\\r\\n                <mat-tab-group style=\\\"display: flex;\\\">\\r\\n                    <mat-tab label=\\\"Simple Use\\\">\\r\\n                        <mat-list style=\\\"overflow: hidden\\\">\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Current Level</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Current job level. (min: 1)</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Target Level</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>The level you want to achieve. (min:2)</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Voucher Type</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Some vouchers like Train have \\\"sub-voucher\\\" categories.</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Premium</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Toggle this if you're premium.</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Discord Link</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Toggle this if you have your discord linked with the server.</h3>\\r\\n                            </mat-list-item>\\r\\n                        </mat-list>\\r\\n                    </mat-tab>\\r\\n\\r\\n\\r\\n                    <mat-tab label=\\\"Advanced Use\\\">\\r\\n\\r\\n\\r\\n                        <h4>Current Level Exp</h4>\\r\\n                        <p>Min: 5</p>\\r\\n                        <p>Exact current job level. This number can be found in the skills menu inside the blue bar of the desired category.</p>\\r\\n\\r\\n\\r\\n                        <h4>Vouchers per Run</h4>\\r\\n                        <p>Filling this will enable you to see how many runs it will take you to get the necessary vouchers for leveling up to the target Level.</p>\\r\\n\\r\\n\\r\\n                        <h4>Exp per Run</h4>\\r\\n                        <p>All fields required for it to work.</p>\\r\\n                        <p>With this option filled it will calculate, together with Vouchers per Run, how many runs it take to get to the target level, <b>assuming you'll end up consuming the vouchers.</b></p>\\r\\n\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n\\r\\n\\r\\n        </mat-accordion>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport {MatDialog, MatSnackBar} from \"@angular/material\";\r\nimport {UpdatesDialogComponent} from \"./updates-dialog/updates-dialog.component\";\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\n\r\n\r\nexport interface Vouchers {\r\n    value: number;\r\n    viewValue: string;\r\n}\r\n\r\nexport interface VoucherTypesGroup {\r\n    disabled?: boolean;\r\n    name: string;\r\n    vouchers: Vouchers[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n\r\nexport class AppComponent {\r\n\r\n\r\n    voucherGroups: VoucherTypesGroup[] = [\r\n\r\n        {\r\n            name: 'Unique',\r\n            vouchers: [\r\n                {value: 0.2, viewValue: 'Airline'},\r\n                {value: 0.3, viewValue: 'Casino'},\r\n                {value: 0.8, viewValue: 'Gym'},\r\n                {value: 0.2, viewValue: 'Heli Pilot'},\r\n                {value: 0.6, viewValue: 'Mail'},\r\n                {value: 2.5, viewValue: 'Medic'}\r\n            ]\r\n        },\r\n        {\r\n            name: 'Garbage',\r\n            vouchers: [\r\n                {value: 0.15, viewValue: 'Garbage: Garbage'},\r\n                {value: 0.15, viewValue: 'Garbage: Player'},\r\n                {value: 0.15, viewValue: 'Garbage: Trucking'}\r\n            ]\r\n        },\r\n        {\r\n            name: 'Police',\r\n            vouchers: [\r\n                {value: 0.15, viewValue: 'Police: Police'},\r\n                {value: 0.15, viewValue: 'Police: Player'}\r\n            ]\r\n        },\r\n        {\r\n            name: 'Train',\r\n            vouchers: [\r\n                {value: 1.2, viewValue: 'Train: Train Conductor'},\r\n                {value: 0.2, viewValue: 'Train: Strength'},\r\n                {value: 0.2, viewValue: 'Train: Player'}\r\n            ]\r\n        }\r\n    ];\r\n\r\n    constructor(public dialog: MatDialog,public snackBar: MatSnackBar) {}\r\n\r\n    openUpdateDialog(): void {\r\n        const dialogRef = this.dialog.open(UpdatesDialogComponent, {\r\n            width: '80%'\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n        });\r\n    }\r\n\r\n\r\n    defaultVoucherSelected = 0.2;\r\n    premiumValue = 1;\r\n    discordValue = 1;\r\n\r\n    currentLevel = null;\r\n    currentLevelExp = null;\r\n    targetLevel = null;\r\n    vouchersPerRun = null;\r\n    expPerRun = null;\r\n\r\n    expNeeded = null;\r\n    vouchersNeeded = null;\r\n    numberOfRuns = null;\r\n\r\n\r\n    currentLevelValueOnInput(event){\r\n        if(isNaN(event.target.valueAsNumber)){\r\n            this.currentLevel = null;\r\n        }else{\r\n            this.currentLevel = event.target.valueAsNumber;\r\n            if(this.currentLevel >= this.targetLevel){\r\n                this.targetLevel = this.currentLevel + 1;\r\n            }\r\n\r\n        }\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n    }\r\n\r\n    currentLevelExpOnInput(event){\r\n        if(isNaN(event.target.valueAsNumber)){\r\n            this.currentLevelExp = null;\r\n        }else{\r\n            this.currentLevelExp = event.target.valueAsNumber;\r\n        }\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n    }\r\n\r\n    targetLevelOnInput(event){\r\n        if(isNaN(event.target.valueAsNumber)){\r\n            this.targetLevel = null;\r\n        }else{\r\n            this.targetLevel = event.target.valueAsNumber;\r\n            if(this.targetLevel <= 2){\r\n                this.currentLevel = 1;\r\n            }else if(this.targetLevel <= this.currentLevel){\r\n                this.currentLevel = this.targetLevel -1;\r\n            }\r\n        }\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n\r\n\r\n    }\r\n\r\n    vouchersPerRunOnInput(event){\r\n        if(isNaN(event.target.valueAsNumber)){\r\n            this.vouchersPerRun = null;\r\n        }else{\r\n            this.vouchersPerRun = event.target.valueAsNumber;\r\n        }\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n    }\r\n\r\n    expPerRunOnInput(event){\r\n\r\n        if(isNaN(event.target.valueAsNumber)){\r\n            this.expPerRun = null;\r\n        }else {\r\n            this.expPerRun = event.target.valueAsNumber;\r\n        }\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n\r\n    }\r\n\r\n    delay(ms: number) {\r\n        return new Promise( resolve => setTimeout(resolve, ms) );\r\n    }\r\n\r\n    onPremiumChange(event){\r\n        if(event.checked){\r\n            this.premiumValue = 1.5;\r\n        }else{\r\n            this.premiumValue = 1;\r\n        }\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n\r\n    }\r\n\r\n    onDiscordChange(event){\r\n        if(event.checked){\r\n            this.discordValue = 1.05;\r\n        }else{\r\n            this.discordValue = 1;\r\n        }\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n    }\r\n\r\n    calculateFinal(from, fromExp, to, voucherRun, expRun){\r\n\r\n        this.expNeeded = null;\r\n        this.vouchersNeeded = null;\r\n        this.numberOfRuns = null;\r\n\r\n        if(expRun >0 && (from == null || from <1 || fromExp == null || fromExp < 10 || to == null\r\n        || to < 2 || voucherRun == null || voucherRun < 0)){\r\n            this.expNeeded = \"All field required when using Exp per Run\";\r\n            this.vouchersNeeded = \"All field required when using Exp per Run\";\r\n            this.numberOfRuns = \"All field required when using Exp per Run\";\r\n        }else if(from < 1 || from == null || from > to || to < 2 || to == null){\r\n            this.expNeeded = \"Something's wrong. Read how to use guide.\";\r\n            this.vouchersNeeded = \"Something's wrong. Read how to use guide.\";\r\n            this.numberOfRuns = \"Something's wrong. Read how to use guide.\";\r\n        }else{\r\n            let expTotal = 0;\r\n\r\n            if(fromExp > 0){\r\n                for(let i = from; i<=to; i++){\r\n                    expTotal += i*5\r\n                }\r\n            }else{\r\n                for(let i = from; i<=to; i++){\r\n                    expTotal += i*5;\r\n                }\r\n                expTotal-=10;\r\n            }\r\n\r\n            expTotal = expTotal - fromExp;\r\n            this.expNeeded = expTotal;\r\n            let voucherWorth = this.defaultVoucherSelected * this.premiumValue * this.discordValue;\r\n\r\n            if(expRun > 0 && expRun != null){\r\n                let expRunVouchersNeeded = 0;\r\n                let expRunNumberOfRuns = 0;\r\n                while(expTotal >0){\r\n\r\n                    expRunVouchersNeeded += voucherRun;\r\n                    expRunNumberOfRuns++;\r\n                    expTotal = expTotal - (voucherRun*voucherWorth + expRun);\r\n                }\r\n                this.vouchersNeeded = Math.ceil(expRunVouchersNeeded);\r\n                this.numberOfRuns = Math.ceil(expRunNumberOfRuns);\r\n            }else if(voucherRun > 0 && voucherRun != null){\r\n\r\n                this.vouchersNeeded = Math.ceil(expTotal/voucherWorth);\r\n                this.numberOfRuns = Math.ceil((expTotal/voucherWorth)/voucherRun);\r\n\r\n            }else{\r\n                this.vouchersNeeded = Math.ceil(expTotal/voucherWorth);\r\n                this.numberOfRuns = \"Vouchers Per Run not specified\";\r\n            }\r\n\r\n\r\n\r\n            if(from <1 || to <2){\r\n                this.expNeeded = null;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    copyToClipboardVouchersNeeded(){\r\n        let selBox = document.createElement('textarea');\r\n        selBox.style.position = 'fixed';\r\n        selBox.style.left = '0';\r\n        selBox.style.top = '0';\r\n        selBox.style.opacity = '0';\r\n        selBox.value = this.vouchersNeeded;\r\n        document.body.appendChild(selBox);\r\n        selBox.focus();\r\n        selBox.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(selBox);\r\n        this.openSnackBar(\"Copied to clipboard\",\"\");\r\n    }\r\n\r\n    runCalculator(event){\r\n        this.defaultVoucherSelected = event;\r\n        this.calculateFinal(this.currentLevel, this.currentLevelExp, this.targetLevel, this.vouchersPerRun, this.expPerRun);\r\n    }\r\n\r\n\r\n\r\n    openSnackBar(message: string, action: string) {\r\n        this.snackBar.open(message, action, {\r\n            duration: 1000,\r\n        });\r\n    }\r\n\r\n}","import {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatFormFieldModule} from \"@angular/material\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\nimport {Component, NgModule} from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UpdatesDialogComponent } from './updates-dialog/updates-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UpdatesDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule\r\n\r\n  ],\r\n  entryComponents: [\r\n      UpdatesDialogComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"mat-h2\\\"><b>Changelog</b></h2>\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n  <mat-tab-group>\\r\\n    <mat-tab label=\\\"09/10/2018\\\">\\r\\n      <br>\\r\\n      <p>Updated UI for a much cleaner look</p>\\r\\n      <p>Reworked the code for faster performance</p>\\r\\n      <p>Now calculations are instantly made without the need of a button.</p>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"09/04/2018\\\">\\r\\n      <br>\\r\\n      <p>Added Exp per run. Now you should be able to precisely Calculate how many exact routes you need combining exp gain during the route + route vouchers.</p>\\r\\n      <p>Added Discord Link bonus.</p>\\r\\n      <p>Added sub-vouchers categories to Garbage/Police/Train.</p>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n  <p></p>\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n  <div mat-card-avatar class=\\\"discordImage\\\"></div>\\r\\n  <span fxFlexAlign=\\\"center\\\">For feedback on errors or suggestions reach me @Real Name#1251</span>\\r\\n  </div>\\r\\n</mat-dialog-content>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-updates-dialog',\r\n  templateUrl: './updates-dialog.component.html',\r\n  styleUrls: ['./updates-dialog.component.css']\r\n})\r\nexport class UpdatesDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":""}