{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,8uEAA8uE,mBAAmB,w4DAAw4D,qhF;;;;;;;;;;;;;;;;;;;;;ACA/lI;AAY1C;IALA;QAMI,qBAAgB,GAAmB;YAC/B,EAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAC;YACnC,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;YACxC,EAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC;YAChC,EAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,EAAC;YACvC,EAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAC;YACjC,EAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAC;YAClC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;YACtC,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC;SAEvC,CAAC;QAEF,2BAAsB,GAAG,KAAK,CAAC;IACnC,CAAC;IAfY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ+B;AACqB;AAChB;AACJ;AACE;AACN;AACI;AACE;AACN;AACE;AACQ;AACV;AACA;AACM;AACN;AACW;AACV;AAEJ;AAEH;AA8B/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QA5BrB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,4EAAiB;gBACjB,wEAAe;gBACf,0EAAgB;gBAChB,oEAAa;gBACb,wEAAe;gBACf,0EAAgB;gBAChB,oEAAa;gBACb,sEAAc;gBACd,+EAAkB;gBAClB,qEAAa;gBACb,qEAAa;gBACb,2EAAgB;gBACd,qEAAkB;gBAClB,2DAAW;gBACX,mEAAmB;gBACnB,sEAAgB;aAEnB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClDtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\"\\r\\n      rel=\\\"stylesheet\\\">\\r\\n<mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxShow.xs=\\\"false\\\" fxShow.sm=\\\"false\\\" fxShow.md=\\\"true\\\" fxShow.lg=\\\"true\\\" fxShow.xl=\\\"true\\\">\\r\\n    <span fxFlex=\\\"50\\\" class=\\\"toolBarTitle\\\">Real Name Tycoon</span>\\r\\n    <div fxLayoutAlign=\\\"end stretch\\\"  fxFlex=\\\"50\\\" ><button mat-button ><b class=\\\"toolBarText\\\">Updated 09/08/2018</b></button></div>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\"  fxShow.xs=\\\"true\\\" fxShow.sm=\\\"true\\\" fxShow.md=\\\"false\\\" fxShow.lg=\\\"false\\\" fxShow.xl=\\\"false\\\">\\r\\n    <span fxFlex=\\\"50\\\"  class=\\\"toolBarTitle\\\">Real Name Tycoon</span>\\r\\n    <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"end stretch\\\"><button  mat-button ><b class=\\\"toolBarText\\\">Updates</b></button></div>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <form class=\\\"calculatorForm\\\">\\r\\n                <mat-form-field>\\r\\n                    <input autocomplete=\\\"off\\\"  required matInput type=\\\"number\\\" placeholder=\\\"Current Level\\\" min=\\\"1\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input autocomplete=\\\"off\\\"  matInput type=\\\"number\\\" placeholder=\\\"Current Level Exp\\\" min=\\\"10\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input autocomplete=\\\"off\\\" required matInput type=\\\"number\\\" placeholder=\\\"Target Level\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input autocomplete=\\\"off\\\"  matInput type=\\\"number\\\" placeholder=\\\"Vouchers Per Run\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input autocomplete=\\\"off\\\"  matInput type=\\\"number\\\" placeholder=\\\"Exp Per Run\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Voucher Type\\\" [(value)]=\\\"defaultVoucherSelected\\\">\\r\\n                        <mat-option *ngFor=\\\"let voucher of mainVoucherTypes\\\" [value]=\\\"voucher.value\\\">\\r\\n                            {{voucher.viewValue}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <div class=\\\"premiumDiscordCheckboxes\\\">\\r\\n                    <mat-checkbox>Premium</mat-checkbox>\\r\\n                    <mat-checkbox style=\\\"margin-left: 20px\\\">Discord Link</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n        <mat-accordion>\\r\\n\\r\\n            <mat-expansion-panel [expanded]=\\\"true\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Result\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <form class=\\\"calculatorForm\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input disabled matInput type=\\\"number\\\" placeholder=\\\"Vouchers Needed\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input disabled matInput type=\\\"number\\\" placeholder=\\\"Exp Needed\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input disabled matInput type=\\\"number\\\" placeholder=\\\"Number of Runs\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input disabled matInput type=\\\"number\\\" placeholder=\\\"Voucher Worth\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n\\r\\n                </form>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        How to use\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n\\r\\n                <mat-tab-group style=\\\"display: flex;\\\">\\r\\n                    <mat-tab label=\\\"Simple Use\\\">\\r\\n                        <mat-list style=\\\"overflow: hidden\\\">\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Current Level</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Current job level.</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Current Level</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>The level you want to achieve.</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Voucher Type</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Some vouchers like Train have \\\"sub-voucher\\\" categories.</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Premium</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Toggle this if you're premium.</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <h4 style=\\\"flex: 25\\\">Discord Link</h4>\\r\\n                                <h3 style=\\\"flex: 90\\\" matSubheader>Toggle this if you have your discord linked with the server.</h3>\\r\\n                            </mat-list-item>\\r\\n                        </mat-list>\\r\\n                    </mat-tab>\\r\\n\\r\\n\\r\\n                    <mat-tab label=\\\"Advanced Use\\\">\\r\\n\\r\\n\\r\\n                        <h4>Current Level Exp</h4>\\r\\n                        <p>Exact current job level. This number can be found in the skills menu inside the blue bar of the desired category.</p>\\r\\n\\r\\n\\r\\n                        <h4>Vouchers per Run</h4>\\r\\n                        <p>Filling this will enable you to see how many runs it will take you to get the necessary vouchers for leveling up to the target Level.</p>\\r\\n\\r\\n\\r\\n                        <h4>Exp per Run</h4>\\r\\n                        <p>With this option filled it will calculate, together with Vouchers per Run, how many runs it take to get to the target level, assuming you'll end up consuming the vouchers.</p>\\r\\n\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n\\r\\n\\r\\n\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n\\r\\n\\r\\n        </mat-accordion>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\nexport interface VoucherTypes {\n    value: string;\n    viewValue: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    mainVoucherTypes: VoucherTypes[] = [\n        {value: '0.2', viewValue: 'Airline'},\n        {value: '0.3', viewValue: 'Casino'},\n        {value: 'garbage', viewValue: 'Garbage'},\n        {value: '0.8', viewValue: 'Gym'},\n        {value: '0.1', viewValue: 'Heli Pilot'},\n        {value: '0.6', viewValue: 'Mail'},\n        {value: '2.5', viewValue: 'Medic'},\n        {value: 'police', viewValue: 'Police'},\n        {value: 'train', viewValue: 'Train'},\n\n    ];\n\n    defaultVoucherSelected = '0.2';\n}","import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatFormFieldModule} from \"@angular/material\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\n\nimport {Component, NgModule} from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatListModule,\n    MatTabsModule,\n    MatTooltipModule,\n      MatFormFieldModule,\n      FormsModule,\n      ReactiveFormsModule,\n      FlexLayoutModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}